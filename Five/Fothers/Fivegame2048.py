#2048import random as rimport osimport copy as cfmt = '\033[0;3{}m{}\033[0m'.format BLACK = 0#heiRED = 1#hongGREEN = 2#lvYELLOW = 3#zongBLUE = 4#lanPURPLE = 5#ziCYAN = 6#qingGRAY = 7#hui class game(object):    def __init__(self):        self.score=0        self.s=0        self.blocks=[[r.choice([2,0,0,2,0,0,0,4,0,0,0,8,0,0,0,2,0,4,8,0]) for i in range(4)] for i in range(4)]        self.u,self.d,self.l,self.r=(2,),(8,0),(4,7),(6,9)        def choice(self):        return r.choice([2,0,0,0,0,4,0,0,0,0,0,0,8,0,0,0,0,0,0,2,0])    def welcome(self):        print'{0: ^30}'.format('welcome to 2048!')        print'{0: ^30}'.format('up:'+"".join([str(i)+',' for i in self.u]))        print'{0: ^30}'.format('down:'+"".join([str(i)+','for i in self.d]))        print'{0: ^30}'.format('left:'+"".join([str(i)+','for i in self.l]))        print'{0: ^30}'.format('right:'+"".join([str(i)+',' for i in self.r]))        print'{0: ^30}'.format('any key + enter continue!')        input()    def clear(self):        os.system("clear")        def insert(self):        for i in range(4):            for j in range(4):                if self.blocks[i][j]==0:                    self.blocks[i][j]=-1*self.choice()                    def check(self):        flag=0        for i in self.blocks:            for j in i:                if j!=0:                    flag+=1                else:                    flag*=0                    break            if flag==0:                break        if flag!=0 :             #print "111111111111111111111111"             return self.test()        else:            return True                def test(self):        for i in [self.u,self.d,self.l,self.r]:            temp,self.s=c.deepcopy(self.blocks),0            self.getkey(i[0],temp)                    if self.s !=0:                return True        return False                 def show(self,theb=None):        self.clear()        blocks=0        if theb ==None:            blocks=self.blocks        else:            blocks=theb        print "*"*30        for i in range(4):            for j in range(4):                temp=blocks[i][j]                if blocks[i][j]<0:                    blocks[i][j]=abs(blocks[i][j])                    print '\033[0;31m{0: ^7}\033[0m'.format(self.blocks[i][j]),                    continue                elif blocks[i][j]==0:                    temp=""                print '\033[0;36m{0: ^7}\033[0m'.format(temp),            print"\n"        print "*"*10,"SCORE:{}".format(self.score),"*"*10                def getkey(self,key,theb=False):               if theb ==False:            blocks=self.blocks            score=self.score        else:            blocks=theb            score=self.s            #print "s",score,id(score),id(self.score)        if key in self.d:            for o in range(3):#move all 0 from side to another side                for j in range(4):                    for i in range(3):                        if blocks[3-i][j] ==0:                                                                   for k in range(3-i,0,-1):                                blocks[k][j], blocks[k-1][j]=blocks[k-1][j],blocks[k][j]                         for j in range(4):                for i in range(3):                    if blocks[3-i][j] == blocks[3-i-1][j]:                        blocks[3-i][j] += blocks[3-i][j]                        score=score+blocks[3-i][j]                        blocks[3-i-1][j]=0                                    for o in range(3):#move all 0 from side to another side                for j in range(4):                    for i in range(3):                        if blocks[3-i][j] ==0:                                                                   for k in range(3-i,0,-1):                                blocks[k][j], blocks[k-1][j]=blocks[k-1][j],blocks[k][j]                    #-----------------------------------------------          if key in self.l:             for o in range(3):#move all 0 from side to another side                for j in range(4):                    for i in range(3):                        if blocks[j][i] ==0:                            for k in range(i,4-1):                                 blocks[j][k],blocks[j][k+1]=blocks[j][k+1],blocks[j][k]                                 for j in range(4):                for i in range(3):                    if blocks[j][i] == blocks[j][i+1]:                            blocks[j][i]+=blocks[j][i]                            score=score+blocks[j][i]                            blocks[j][i+1]=0                          for o in range(3):                for j in range(4):                    for i in range(3):                        if blocks[j][i] ==0:                            for k in range(i,4-1):                                 blocks[j][k],blocks[j][k+1]=blocks[j][k+1],blocks[j][k]                                     #-----------------------------------------------        if key in self.u:           for o in range(3):#move all 0 from side to another side                for j in range(4):                    for i in range(3):                        if blocks[i][j] == 0:                            for k in range(i,4-1):                              blocks[k][j],blocks[k+1][j]=blocks[k+1][j],blocks[k][j]                                        for j in range(4):               for i in range(3):                   if blocks[i][j] == blocks[i+1][j]:                        blocks[i][j] += blocks[i][j]                        score=score+blocks[i][j]                        blocks[i+1][j]=0                      for o in range(3):#move all 0 from side to another side                for j in range(4):                    for i in range(3):                        if blocks[i][j] ==0:                            for k in range(i,4-1):                                 blocks[k][j],blocks[k+1][j]=blocks[k+1][j],blocks[k][j]                                                                #-----------------------------------------------        if key in self. r:            for o in range(3):#move all 0 from side to another side                for j in range(4):                    for i in range(3):                        if blocks[j][3-i] == 0:                            for k in range(3-i,0,-1):                              blocks[j][k],blocks[j][k-1]=blocks[j][k-1],blocks[j][k]                       for j in range(4):                for i in range(3):                    if blocks[j][3-i] == blocks[j][3-i-1]:                        blocks[j][3-i] +=blocks[j][3-i]                         score=score+blocks[j][3-i]                        blocks[j][3-i-1]=0                         for o in range(3):#move all 0 from side to another side                for j in range(4):                    for i in range(3):                        if blocks[j][3-i] == 0:                            for k in range(3-i,0,-1):                              blocks[j][k],blocks[j][k-1]=blocks[j][k-1],blocks[j][k]           if theb ==False:            self.score=score        else:            self.s=score                                                                                                                      import time   if __name__=="__main__":    d=game()    d.clear()    d.welcome()    d.show()    while 1:        try:          i=int(input())        except:            i=50            pass        d.getkey(i)        d.insert()        d.show()        if not d.check() :            print"FAILED!  YOUR SCORE {}".format(d.score)            break        time.sleep(0.5)        #d.show()    print "finish!"                  